{"version":3,"sources":["components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","reportWebVitals.js","index.js","components/ContactList/ContactList.module.css"],"names":["ContactForm","state","contacts","name","number","handleChange","event","setState","currentTarget","value","handleAddContact","preventDefault","props","onSubmit","reset","this","type","onChange","pattern","title","required","React","Component","Filter","ContactList","ondeleteContact","map","id","className","style","contactItem","onClick","App","filter","formSubmit","data","console","log","find","o","toLowerCase","alert","newContact","uuidv4","prevState","deleteContact","contactId","contact","changeFilter","getVisibleContacts","normalizedFilter","includes","visibleContacts","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.89d69be0.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass ContactForm extends React.Component {\r\n  state = {\r\n    contacts: [],\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    // console.log(event.currentTarget);\r\n    // console.log(event.currentTarget.name);\r\n    // console.log(event.currentTarget.value);\r\n    this.setState({ [event.currentTarget.name]: event.currentTarget.value });\r\n  };\r\n\r\n  handleAddContact = (event) => {\r\n    event.preventDefault();\r\n    // console.log(this.state);\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleAddContact}>\r\n        <label>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          Number\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n\r\n// handleNameChange = event => {\r\n//     // console.log(event.currentTarget.value);\r\n//     this.setState({name: event.currentTarget.value})\r\n// };\r\n\r\n// handleNumberChange = event => {\r\n//     // console.log(event.currentTarget.value);\r\n//     this.setState({number: event.currentTarget.value})\r\n// };\r\n","import React from \"react\";\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label>\r\n    Find contacts by name\r\n    <input type=\"text\" value={value} onChange={onChange} />\r\n  </label>\r\n);\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\nimport style from \"./ContactList.module.css\";\r\n\r\nconst ContactList = ({ contacts, ondeleteContact }) => (\r\n  <ul>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <li key={id} className={style.contactItem}>\r\n        <p>\r\n          {name}: {number}\r\n        </p>\r\n        <button type=\"button\" onClick={() => ondeleteContact(id)}>\r\n          Delete\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nexport default ContactList;\r\n","import React from \"react\";\nimport ContactForm from \"./components/ContactForm\";\nimport Filter from \"./components/Filter\";\nimport ContactList from \"./components/ContactList\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport \"./App.css\";\n\nclass App extends React.Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    // name: \"\",\n    // number: \"\",\n    filter: \"\",\n  };\n\n  formSubmit = (data) => {\n    console.log(data.name);\n    console.log(this.state.contacts);\n\n    let obj = this.state.contacts.find(\n      (o) => o.name.toLowerCase() === data.name.toLowerCase()\n    );\n\n    if (!obj) {\n      const newContact = {\n        id: uuidv4(),\n        name: data.name,\n        number: data.number,\n      };\n      this.setState((prevState) => ({\n        contacts: [newContact, ...prevState.contacts],\n      }));\n    } else {\n      alert(`${data.name} is already in contact`);\n    }\n\n    // this.setState((prevState) => ({\n    //   contacts: [newContact, ...prevState.contacts],\n    // }));\n  };\n\n  deleteContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n\n  changeFilter = (event) => {\n    this.setState({ filter: event.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n    return (\n      <div>\n        <div className=\"App\">\n          <h1>Phonebook</h1>\n          <ContactForm onSubmit={this.formSubmit} />\n\n          <h2>Contacts</h2>\n\n          <Filter value={filter} onChange={this.changeFilter} />\n          <ContactList\n            contacts={visibleContacts}\n            ondeleteContact={this.deleteContact}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactList_contactItem__stMnA\"};"],"sourceRoot":""}